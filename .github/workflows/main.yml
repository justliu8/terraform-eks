name: "Terraform CI/CD"

on: 
  push: 
    branches:
    - main
  pull_request:
    branches:
    - main

env: 
  TF_LOG: INFO
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  validate:
    name: Validation
    runs-on: ubuntu-latest
    outputs:
      init_outcome: ${{ steps.init.outcome }}
      fmt_outcome: ${{ steps.fmt.outcome }}
      validate_outcome: ${{ steps.validate.outcome }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.7.3
      
    - name: Terraform init
      id: init
      run: terraform init

    - name: Terraform format
      id: fmt
      run: terraform fmt -check
      
    - name: Terraform validate
      id: validate
      run: terraform validate
        
  deploy:
    name: Deployment
    runs-on: ubuntu-latest
    needs: validate
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.7.3
      
    - name: Terraform init
      id: init
      run: terraform init
      
    - name: Terraform plan
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color -input=false
      continue-on-error: true
      
    - name: Create Github comment report
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
            const output = `#### Terraform Format and Style üñå\`${{ needs.validate.outputs.fmt_outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ needs.validate.outputs.init_outcome }}\`
            #### Terraform Validation ü§ñ\`${{ needs.validate.outputs.validate_outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
